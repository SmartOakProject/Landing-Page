{"version":3,"sources":["webpack:///./src/pages/i-mundus.js"],"names":["IndexPage","data","intl","useIntl","counter","page","link","title","formatMessage","id","desc","btns","pageData","allInternalPl","edges","header","btnPath","content","map","e","i","type","alternative_id","first","isRight","isBlack","videoSrc","videoImg","z","isSecond"],"mappings":"yOA0GeA,UA9FG,WACd,IAAMC,EAAI,OAkCJC,EAAOC,oBAETC,EAAU,EACd,OACI,oCACI,kBAAC,IAAD,CAAQC,KAAK,KACT,kBAAC,IAAD,CACIC,MAAI,EACJC,MAAOL,EAAKM,cAAc,CACtBC,GAAI,yBAERC,KAAMR,EAAKM,cAAc,CACrBC,GAAI,wBAERE,KAAMC,YAASX,EAAKY,cAAcC,MAAO,WAAWC,OAAOJ,KAC3DK,QAAQ,yBAGfJ,YAASX,EAAKY,cAAcC,MAAO,WAAWG,QAAQC,KAAI,SAACC,EAAGC,GAC3D,MAAe,SAAXD,EAAEE,KAEE,kBAAC,IAAD,CACId,MAAOL,EAAKM,cAAc,CACtBC,GAAG,mBAAoBW,EAArB,WAENV,KAAMR,EAAKM,cAAc,CACrBC,GAAG,mBAAoBW,EAArB,UAENX,GAAIU,EAAEG,eACNC,MAAa,IAANH,EACPI,QAASJ,EAAI,GAAM,EACnBT,KAAMQ,EAAER,KACRK,QAAO,mBAAqBI,EAArB,QACPK,SAAO,IAKf,kBAAC,IAAD,CACIC,SAAQ,eAAiBtB,IACzBuB,SAAS,OACTpB,MAAOL,EAAKM,cAAc,CACtBC,GAAG,mBAAoBW,EAArB,WAENV,KAAMR,EAAKM,cAAc,CACrBC,GAAG,mBAAoBW,EAArB,UAENQ,EAAGR,EAAI,EACPS,SAAgB,IAANT,EACVT,KAAMQ,EAAER,KACRK,QAAO,mBAAqBI,EAArB,aAInB,kBAAC,IAAD,MACA,kBAAC,IAAD,S","file":"component---src-pages-i-mundus-js-e05347401934c8b6541e.js","sourcesContent":["import React from 'react';\nimport { useIntl } from 'gatsby-plugin-intl';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from '../components/Header';\nimport TextHeader from '../components/TextHeader';\nimport ContentItem from '../components/ContentItem';\nimport Wrapper from '../components/Wrapper';\nimport Footer from '../components/Footer';\nimport Cards from '../components/Cards';\nimport { pageData } from '../components/common/pageData';\n\nconst IndexPage = () => {\n    const data = useStaticQuery(graphql`\n        query iMundus {\n            allInternalPl {\n                edges {\n                    node {\n                        iMundus {\n                            header {\n                                alternative_id\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                desc\n                                title\n                            }\n                            content {\n                                type\n                                title\n                                img\n                                desc\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                alternative_id\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const intl = useIntl();\n\n    let counter = 1;\n    return (\n        <>\n            <Header page=\"1\">\n                <TextHeader\n                    link\n                    title={intl.formatMessage({\n                        id: 'iMundus.header.title',\n                    })}\n                    desc={intl.formatMessage({\n                        id: 'iMundus.header.desc',\n                    })}\n                    btns={pageData(data.allInternalPl.edges, 'iMundus').header.btns}\n                    btnPath=\"iMundus.header.btns\"\n                />\n            </Header>\n            {pageData(data.allInternalPl.edges, 'iMundus').content.map((e, i) => {\n                if (e.type === 'item') {\n                    return (\n                        <ContentItem\n                            title={intl.formatMessage({\n                                id: `iMundus.content.${i}.title`,\n                            })}\n                            desc={intl.formatMessage({\n                                id: `iMundus.content.${i}.desc`,\n                            })}\n                            id={e.alternative_id}\n                            first={i === 0}\n                            isRight={i % 2 === 0}\n                            btns={e.btns}\n                            btnPath={`iMundus.content.${i}.btns`}\n                            isBlack\n                        />\n                    );\n                }\n                return (\n                    <Wrapper\n                        videoSrc={`NFoundation-${counter++}`}\n                        videoImg=\"todo\"\n                        title={intl.formatMessage({\n                            id: `iMundus.content.${i}.title`,\n                        })}\n                        desc={intl.formatMessage({\n                            id: `iMundus.content.${i}.desc`,\n                        })}\n                        z={i + 1}\n                        isSecond={i === 0}\n                        btns={e.btns}\n                        btnPath={`iMundus.content.${i}.btns`}\n                    />\n                );\n            })}\n            <Cards />\n            <Footer />\n        </>\n    );\n};\nexport default IndexPage;\n"],"sourceRoot":""}