{"version":3,"sources":["webpack:///./src/components/Contact/Item.js","webpack:///./src/components/Contact/Form.js","webpack:///./src/pages/contact.js"],"names":["ItemText","styled","p","ItemMail","a","Item","title","phoneNumber","email","href","FormWrapper","div","Btn","button","Heading","TextArea","textarea","EmailInput","input","EmailLabel","label","Form","useState","setEmail","message","setMessage","error","setError","intl","useIntl","formatMessage","id","htmlFor","type","placeholder","value","onChange","e","target","style","border","className","onClick","test","String","toLowerCase","ContactWrapper","ContactItems","IndexPage","data","pageData","allInternalPl","edges","content","map","desc","btns","btnText","Footer"],"mappings":"qJAIMA,EAAWC,IAAOC,EAAV,qEAAGD,CAAH,mBAGRE,EAAWF,IAAOG,EAAV,qEAAGH,CAAH,uHAyBCI,EAdF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAChC,OACI,6BACI,kBAACR,EAAD,KAAWM,GACX,kBAACN,EAAD,KAAWO,GACX,kBAACJ,EAAD,CAAUM,KAAI,UAAYD,GAAUA,K,YCnB1CE,EAAcT,IAAOU,IAAV,oEAAGV,CAAH,iBAIXW,EAAMX,IAAOY,OAAV,4DAAGZ,CAAH,sSAmBHa,EAAUb,IAAOC,EAAV,gEAAGD,CAAH,0EAMPc,EAAWd,IAAOe,SAAV,iEAAGf,CAAH,2QAmBRgB,EAAahB,IAAOiB,MAAV,mEAAGjB,CAAH,4PAiBVkB,EAAalB,IAAOmB,MAAV,mEAAGnB,CAAH,uEA+DDoB,EAzDF,WAAO,IAAD,EACWC,mBAAS,IAA5Bd,EADQ,KACDe,EADC,OAEeD,mBAAS,IAAhCE,EAFQ,KAECC,EAFD,OAGWH,oBAAS,GAA5BI,EAHQ,KAGDC,EAHC,KAgBf,IAAMC,EAAOC,oBACb,OACI,kBAACnB,EAAD,KACI,kBAACI,EAAD,KACKc,EAAKE,cAAc,CAChBC,GAAI,0BAGZ,kBAACZ,EAAD,CAAYa,QAAQ,cACfN,EAAQ,6BAA+B,IAE5C,kBAACT,EAAD,CACIc,GAAG,aACHE,KAAK,QACLC,YAAaN,EAAKE,cAAc,CAC5BC,GAAI,sBAERI,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAId,EAASc,EAAEC,OAAOH,QACjCI,MAAO,CACHC,OAAQd,EAAQ,oBAAsB,oBAI9C,kBAACX,EAAD,CACIoB,MAAOX,EACPY,SAAU,SAAAC,GAAC,OAAIZ,EAAWY,EAAEC,OAAOH,QACnCD,YAAaN,EAAKE,cAAc,CAC5BC,GAAI,mBAIZ,kBAACnB,EAAD,CAAK6B,UAAU,OAAOC,QA3C9B,SAAcL,GACS,0JAEJM,KAAKC,OAAOpC,GAAOqC,gBAC9BtB,EAAS,IACTE,EAAW,IACXE,GAAS,IAETA,GAAS,KAoCJC,EAAKE,cAAc,CAChBC,GAAI,oB,wBCrHlBe,EAAiB7C,IAAOU,IAAV,0EAAGV,CAAH,gQAkBd8C,EAAe9C,IAAOU,IAAV,wEAAGV,CAAH,6TA8DH+C,UA1CG,WACd,IAAMC,EAAI,OAyBV,OACI,oCACI,kBAACH,EAAD,KACI,kBAACC,EAAD,KACKG,YAASD,EAAKE,cAAcC,MAAO,WAAWC,QAAQC,KAAI,SAAAjB,GACvD,OACI,kBAAC,EAAD,CAAM/B,MAAO+B,EAAE/B,MAAOC,YAAa8B,EAAEkB,KAAM/C,MAAO6B,EAAEmB,KAAK,GAAGC,cAIxE,kBAAC,EAAD,OAEJ,kBAACC,EAAA,EAAD,S","file":"component---src-pages-contact-js-68e78ef5d0f380f99d2c.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ItemText = styled.p`\n    margin: 4px 0;\n`;\nconst ItemMail = styled.a`\n    color: #007bff;\n    text-decoration: none;\n    background-color: transparent;\n\n    &:hover {\n        color: #0056b3;\n        text-decoration: underline;\n    }\n`;\n\nconst Item = ({ title, phoneNumber, email }) => {\n    return (\n        <div>\n            <ItemText>{title}</ItemText>\n            <ItemText>{phoneNumber}</ItemText>\n            <ItemMail href={`mailto:${email}`}>{email}</ItemMail>\n        </div>\n    );\n};\nItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string,\n    email: PropTypes.string,\n};\nexport default Item;\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useIntl } from \"gatsby-plugin-intl\"\n\nconst FormWrapper = styled.div`\n    width: 100%;\n`\n\nconst Btn = styled.button`\n    background-color: #fff;\n    cursor: pointer;\n    color: #606060;\n    border: 0.1rem solid #999;\n    text-align: center;\n    display: block;\n    width: 100%;\n    font-size: 14px;\n    padding: 1rem 2rem;\n    border-radius: 3px;\n\n    &:hover {\n        color: #3e3e3e;\n        border: 0.1rem solid #000;\n        box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.804);\n        transition: all 0.3s ease;\n    }\n`\nconst Heading = styled.p`\n    margin-bottom: 25px;\n    font-size: 19px;\n    font-weight: 300;\n    text-align: center;\n`\nconst TextArea = styled.textarea`\n    font-size: 1.4rem;\n    padding: 1rem 2rem;\n    width: 100%;\n    margin-bottom: 2.5rem;\n    border-radius: 3px;\n    color: #606060;\n    border: 0.1rem solid #999;\n    outline: none;\n    resize: none;\n    font-family: inherit;\n    transition: all 0.2s;\n    height: 20rem;\n\n    &:focus {\n        color: #3e3e3e;\n        border: 0.1rem solid #000 !important;\n    }\n`\nconst EmailInput = styled.input`\n    font-size: 1.4rem;\n    padding: 1rem 2rem;\n    width: 100%;\n    margin-bottom: 2rem;\n    border-radius: 3px;\n    color: #606060;\n    border: 0.1rem solid #999;\n    outline: none;\n    resize: none;\n    font-family: inherit;\n    transition: all 0.2s;\n    &:focus {\n        color: #3e3e3e;\n        border: 0.1rem solid #000 !important;\n    }\n`\nconst EmailLabel = styled.label`\n    display: block;\n    color: #c91630;\n    font-size: 1.4rem;\n    padding-bottom: 1rem;\n`\nconst Form = () => {\n    const [email, setEmail] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [error, setError] = useState(false)\n\n    function send(e) {\n        const validEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n        if (validEmail.test(String(email).toLowerCase())) {\n            setEmail(\"\")\n            setMessage(\"\")\n            setError(false)\n        } else {\n            setError(true)\n        }\n    }\n    const intl = useIntl()\n    return (\n        <FormWrapper>\n            <Heading>\n                {intl.formatMessage({\n                    id: \"general.contactTitle\",\n                })}\n            </Heading>\n            <EmailLabel htmlFor=\"email-form\">\n                {error ? \"Nieprawid≈Çowy adres e-mail\" : \"\"}\n            </EmailLabel>\n            <EmailInput\n                id=\"email-from\"\n                type=\"email\"\n                placeholder={intl.formatMessage({\n                    id: \"general.yourEmail\",\n                })}\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                style={{\n                    border: error ? \"1px solid #c91630\" : \"1px solid #999\",\n                }}\n            />\n\n            <TextArea\n                value={message}\n                onChange={e => setMessage(e.target.value)}\n                placeholder={intl.formatMessage({\n                    id: \"general.help\",\n                })}\n            />\n\n            <Btn className=\"sent\" onClick={send}>\n                {intl.formatMessage({\n                    id: \"general.send\",\n                })}\n            </Btn>\n        </FormWrapper>\n    )\n}\n\nexport default Form\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Item from '../components/Contact/Item';\nimport Form from '../components/Contact/Form';\nimport Footer from '../components/Footer';\nimport { pageData } from '../components/common/pageData';\n\nconst ContactWrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 10rem;\n    margin: 8rem 10rem;\n    /* max-width: 100%; */\n\n    @media screen and (max-width: 950px) {\n        grid-template-columns: 1fr;\n        grid-auto-flow: dense;\n        grid-gap: 5rem;\n    }\n    @media screen and (max-width: 600px) {\n        margin: 5rem 2rem;\n        margin-top: 3rem;\n    }\n`;\n\nconst ContactItems = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-row-gap: 25px;\n    /* max-width: 100%; */\n    @media screen and (max-width: 900px) {\n        grid-template-columns: repeat(3, 1fr);\n        grid-column-gap: 25px;\n        margin: 0 auto;\n\n        /* margin: 0 auto; */\n    }\n    @media screen and (max-width: 790px) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    @media screen and (max-width: 600px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nconst IndexPage = () => {\n    const data = useStaticQuery(graphql`\n        query contact {\n            allInternalPl {\n                edges {\n                    node {\n                        contact {\n                            content {\n                                type\n                                title\n                                img\n                                desc\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                alternative_id\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            <ContactWrapper>\n                <ContactItems>\n                    {pageData(data.allInternalPl.edges, 'contact').content.map(e => {\n                        return (\n                            <Item title={e.title} phoneNumber={e.desc} email={e.btns[0].btnText} />\n                        );\n                    })}\n                </ContactItems>\n                <Form />\n            </ContactWrapper>\n            <Footer />\n        </>\n    );\n};\nexport default IndexPage;\n"],"sourceRoot":""}