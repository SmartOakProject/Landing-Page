{"version":3,"sources":["webpack:///./src/pages/i-mundus.js"],"names":["IndexPage","data","intl","useIntl","counter","page","link","title","formatMessage","id","desc","btns","allInternalPl","edges","node","iMundus","header","btnPath","content","map","e","i","type","alternative_id","first","isRight","isBlack","videoSrc","videoImg","z","isSecond"],"mappings":"6NA4GeA,UAjGG,WACd,IAAMC,EAAI,OAkCJC,EAAOC,oBAETC,EAAU,EACd,OACI,oCACI,kBAAC,IAAD,CAAQC,KAAK,KACT,kBAAC,IAAD,CACIC,MAAI,EACJC,MAAOL,EAAKM,cAAc,CACtBC,GAAI,yBAERC,KAAMR,EAAKM,cAAc,CACrBC,GAAI,wBAERE,KAAMV,EAAKW,cAAcC,MAAM,GAAGC,KAAKC,QAAQC,OAAOL,KACtDM,QAAO,yBAGdhB,EAAKW,cAAcC,MAAM,GAAGC,KAAKC,QAAQG,QAAQC,KAAI,SAACC,EAAGC,GACtD,MAAe,SAAXD,EAAEE,KAIE,kBAAC,IAAD,CACIf,MAAOL,EAAKM,cAAc,CACtBC,GAAG,mBAAoBY,EAArB,WAENX,KAAMR,EAAKM,cAAc,CACrBC,GAAG,mBAAoBY,EAArB,UAENZ,GAAIW,EAAEG,eACNC,MAAa,IAANH,EACPI,QAASJ,EAAI,GAAM,EACnBV,KAAMS,EAAET,KACRM,QAAO,mBAAqBI,EAArB,QACPK,SAAS,IAKb,kBAAC,IAAD,CACIC,SAAQ,eAAiBvB,IACzBwB,SAAU,OACVrB,MAAOL,EAAKM,cAAc,CACtBC,GAAG,mBAAoBY,EAArB,WAENX,KAAMR,EAAKM,cAAc,CACrBC,GAAG,mBAAoBY,EAArB,UAENQ,EAAGR,EAAI,EACPS,SAAgB,IAANT,EACVV,KAAMS,EAAET,KACRM,QAAO,mBAAqBI,EAArB,aAKvB,kBAAC,IAAD,MACA,kBAAC,IAAD,S","file":"component---src-pages-i-mundus-js-82286ce005a55704184e.js","sourcesContent":["import React from \"react\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/Header\"\nimport TextHeader from \"../components/TextHeader\"\nimport ContentItem from \"../components/ContentItem\"\nimport Wrapper from \"../components/Wrapper\"\nimport Footer from \"../components/Footer/Footer\"\nimport Cards from \"../components/Cards\"\n\nconst IndexPage = () => {\n    const data = useStaticQuery(graphql`\n        query iMundus {\n            allInternalPl {\n                edges {\n                    node {\n                        iMundus {\n                            header {\n                                alternative_id\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                desc\n                                title\n                            }\n                            content {\n                                type\n                                title\n                                img\n                                desc\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                alternative_id\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const intl = useIntl()\n\n    let counter = 1\n    return (\n        <>\n            <Header page=\"1\">\n                <TextHeader\n                    link\n                    title={intl.formatMessage({\n                        id: \"iMundus.header.title\",\n                    })}\n                    desc={intl.formatMessage({\n                        id: \"iMundus.header.desc\",\n                    })}\n                    btns={data.allInternalPl.edges[1].node.iMundus.header.btns}\n                    btnPath={`iMundus.header.btns`}\n                />\n            </Header>\n            {data.allInternalPl.edges[1].node.iMundus.content.map((e, i) => {\n                if (e.type === \"item\") {\n                    // console.log(e.btns)\n\n                    return (\n                        <ContentItem\n                            title={intl.formatMessage({\n                                id: `iMundus.content.${i}.title`,\n                            })}\n                            desc={intl.formatMessage({\n                                id: `iMundus.content.${i}.desc`,\n                            })}\n                            id={e.alternative_id}\n                            first={i === 0}\n                            isRight={i % 2 === 0}\n                            btns={e.btns}\n                            btnPath={`iMundus.content.${i}.btns`}\n                            isBlack={true}\n                        />\n                    )\n                } else {\n                    return (\n                        <Wrapper\n                            videoSrc={`NFoundation-${counter++}`}\n                            videoImg={\"todo\"}\n                            title={intl.formatMessage({\n                                id: `iMundus.content.${i}.title`,\n                            })}\n                            desc={intl.formatMessage({\n                                id: `iMundus.content.${i}.desc`,\n                            })}\n                            z={i + 1}\n                            isSecond={i === 0}\n                            btns={e.btns}\n                            btnPath={`iMundus.content.${i}.btns`}\n                        />\n                    )\n                }\n            })}\n            <Cards />\n            <Footer />\n        </>\n    )\n}\nexport default IndexPage\n"],"sourceRoot":""}