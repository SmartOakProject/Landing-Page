{"version":3,"sources":["webpack:///./src/pages/oak-atlantis.js"],"names":["IndexPage","data","intl","useIntl","counter","page","link","title","formatMessage","id","desc","btns","allInternalPl","edges","node","oakAtlantis","header","btnPath","content","map","e","i","type","alternative_id","first","isRight","isBlack","videoSrc","videoImg","z","isSecond"],"mappings":"4LA6GeA,UAnGG,WACd,IAAMC,EAAI,OAkCJC,EAAOC,oBAETC,EAAU,EACd,OACI,oCACI,kBAAC,IAAD,CAAQC,KAAK,KACT,kBAAC,IAAD,CACIC,MAAI,EACJC,MAAOL,EAAKM,cAAc,CACtBC,GAAI,6BAERC,KAAMR,EAAKM,cAAc,CACrBC,GAAI,4BAERE,KACIV,EAAKW,cAAcC,MAAM,GAAGC,KAAKC,YAAYC,OAAOL,KAExDM,QAAO,6BAGdhB,EAAKW,cAAcC,MAAM,GAAGC,KAAKC,YAAYG,QAAQC,KAClD,SAACC,EAAGC,GACA,MAAe,SAAXD,EAAEE,KAEE,kBAAC,IAAD,CACIf,MAAOL,EAAKM,cAAc,CACtBC,GAAG,uBAAwBY,EAAzB,WAENX,KAAMR,EAAKM,cAAc,CACrBC,GAAG,uBAAwBY,EAAzB,UAENZ,GAAIW,EAAEG,eACNC,MAAa,IAANH,EACPI,QAASJ,EAAI,GAAM,EACnBV,KAAMS,EAAET,KACRM,QAAO,uBAAyBI,EAAzB,QACPK,SAAS,IAKb,kBAAC,IAAD,CACIC,SAAQ,eAAiBvB,IACzBwB,SAAU,OACVrB,MAAOL,EAAKM,cAAc,CACtBC,GAAG,uBAAwBY,EAAzB,WAENX,KAAMR,EAAKM,cAAc,CACrBC,GAAG,uBAAwBY,EAAzB,UAENQ,EAAGR,EAAI,EACPS,SAAgB,IAANT,EACVV,KAAMS,EAAET,KACRM,QAAO,uBAAyBI,EAAzB,aAM3B,kBAAC,IAAD,MACA,kBAAC,IAAD,S","file":"component---src-pages-oak-atlantis-js-8ac29f051594fd311053.js","sourcesContent":["import React from \"react\"\nimport { useIntl } from \"gatsby-plugin-intl\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/Header\"\nimport TextHeader from \"../components/TextHeader\"\nimport ContentItem from \"../components/ContentItem\"\nimport Wrapper from \"../components/Wrapper\"\nimport Footer from \"../components/Footer/Footer\"\nimport Cards from \"../components/Cards\"\nconst IndexPage = () => {\n    const data = useStaticQuery(graphql`\n        query oakAtlantis {\n            allInternalPl {\n                edges {\n                    node {\n                        oakAtlantis {\n                            header {\n                                alternative_id\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                desc\n                                title\n                            }\n                            content {\n                                type\n                                title\n                                img\n                                desc\n                                btns {\n                                    btnLink\n                                    btnText\n                                    btnType\n                                }\n                                alternative_id\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const intl = useIntl()\n\n    let counter = 1\n    return (\n        <>\n            <Header page=\"1\">\n                <TextHeader\n                    link\n                    title={intl.formatMessage({\n                        id: \"oakAtlantis.header.title\",\n                    })}\n                    desc={intl.formatMessage({\n                        id: \"oakAtlantis.header.desc\",\n                    })}\n                    btns={\n                        data.allInternalPl.edges[1].node.oakAtlantis.header.btns\n                    }\n                    btnPath={`oakAtlantis.header.btns`}\n                />\n            </Header>\n            {data.allInternalPl.edges[1].node.oakAtlantis.content.map(\n                (e, i) => {\n                    if (e.type === \"item\") {\n                        return (\n                            <ContentItem\n                                title={intl.formatMessage({\n                                    id: `oakAtlantis.content.${i}.title`,\n                                })}\n                                desc={intl.formatMessage({\n                                    id: `oakAtlantis.content.${i}.desc`,\n                                })}\n                                id={e.alternative_id}\n                                first={i === 0}\n                                isRight={i % 2 === 0}\n                                btns={e.btns}\n                                btnPath={`oakAtlantis.content.${i}.btns`}\n                                isBlack={true}\n                            />\n                        )\n                    } else {\n                        return (\n                            <Wrapper\n                                videoSrc={`NFoundation-${counter++}`}\n                                videoImg={\"todo\"}\n                                title={intl.formatMessage({\n                                    id: `oakAtlantis.content.${i}.title`,\n                                })}\n                                desc={intl.formatMessage({\n                                    id: `oakAtlantis.content.${i}.desc`,\n                                })}\n                                z={i + 1}\n                                isSecond={i === 0}\n                                btns={e.btns}\n                                btnPath={`oakAtlantis.content.${i}.btns`}\n                            />\n                        )\n                    }\n                }\n            )}\n            <Cards />\n            <Footer />\n        </>\n    )\n}\nexport default IndexPage\n"],"sourceRoot":""}